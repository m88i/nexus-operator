// +build !ignore_autogenerated

// This file was autogenerated by openapi-gen. Do not edit it manually!

package v1alpha1

import (
	spec "github.com/go-openapi/spec"
	common "k8s.io/kube-openapi/pkg/common"
)

func GetOpenAPIDefinitions(ref common.ReferenceCallback) map[string]common.OpenAPIDefinition {
	return map[string]common.OpenAPIDefinition{
		"github.com/m88i/nexus-operator/pkg/apis/apps/v1alpha1.Nexus":            schema_pkg_apis_apps_v1alpha1_Nexus(ref),
		"github.com/m88i/nexus-operator/pkg/apis/apps/v1alpha1.NexusCredentials": schema_pkg_apis_apps_v1alpha1_NexusCredentials(ref),
		"github.com/m88i/nexus-operator/pkg/apis/apps/v1alpha1.NexusPersistence": schema_pkg_apis_apps_v1alpha1_NexusPersistence(ref),
		"github.com/m88i/nexus-operator/pkg/apis/apps/v1alpha1.NexusResources":   schema_pkg_apis_apps_v1alpha1_NexusResources(ref),
		"github.com/m88i/nexus-operator/pkg/apis/apps/v1alpha1.NexusSpec":        schema_pkg_apis_apps_v1alpha1_NexusSpec(ref),
		"github.com/m88i/nexus-operator/pkg/apis/apps/v1alpha1.NexusStatus":      schema_pkg_apis_apps_v1alpha1_NexusStatus(ref),
	}
}

func schema_pkg_apis_apps_v1alpha1_Nexus(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "Nexus is the Schema for the nexus API",
				Type:        []string{"object"},
				Properties: map[string]spec.Schema{
					"kind": {
						SchemaProps: spec.SchemaProps{
							Description: "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"apiVersion": {
						SchemaProps: spec.SchemaProps{
							Description: "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"metadata": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"),
						},
					},
					"spec": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("github.com/m88i/nexus-operator/pkg/apis/apps/v1alpha1.NexusSpec"),
						},
					},
					"status": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("github.com/m88i/nexus-operator/pkg/apis/apps/v1alpha1.NexusStatus"),
						},
					},
				},
			},
		},
		Dependencies: []string{
			"github.com/m88i/nexus-operator/pkg/apis/apps/v1alpha1.NexusSpec", "github.com/m88i/nexus-operator/pkg/apis/apps/v1alpha1.NexusStatus", "k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"},
	}
}

func schema_pkg_apis_apps_v1alpha1_NexusCredentials(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "NexusCredentials is the credentials for the administrator user in the Nexus web console",
				Type:        []string{"object"},
				Properties: map[string]spec.Schema{
					"user": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"password": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
				},
				Required: []string{"user", "password"},
			},
		},
	}
}

func schema_pkg_apis_apps_v1alpha1_NexusPersistence(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "NexusPersistence is the structure for the data persistent",
				Type:        []string{"object"},
				Properties: map[string]spec.Schema{
					"persistent": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"boolean"},
							Format: "",
						},
					},
					"volumeSize": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
				},
				Required: []string{"persistent"},
			},
		},
	}
}

func schema_pkg_apis_apps_v1alpha1_NexusResources(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "NexusResources is the request and limit definitions for the deployed pods",
				Type:        []string{"object"},
				Properties: map[string]spec.Schema{
					"cpuRequest": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"cpuLimit": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"memoryRequest": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"memoryLimit": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
				},
			},
		},
	}
}

func schema_pkg_apis_apps_v1alpha1_NexusSpec(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "NexusSpec defines the desired state of Nexus",
				Type:        []string{"object"},
				Properties: map[string]spec.Schema{
					"replicas": {
						SchemaProps: spec.SchemaProps{
							Description: "Replicas is a number of Nexus pod replicas",
							Type:        []string{"integer"},
							Format:      "int32",
						},
					},
					"image": {
						SchemaProps: spec.SchemaProps{
							Description: "Image is the full image tag name for this specific deployment",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"resources": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("github.com/m88i/nexus-operator/pkg/apis/apps/v1alpha1.NexusResources"),
						},
					},
					"credentials": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("github.com/m88i/nexus-operator/pkg/apis/apps/v1alpha1.NexusCredentials"),
						},
					},
					"persistence": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("github.com/m88i/nexus-operator/pkg/apis/apps/v1alpha1.NexusPersistence"),
						},
					},
				},
				Required: []string{"replicas", "image", "credentials", "persistence"},
			},
		},
		Dependencies: []string{
			"github.com/m88i/nexus-operator/pkg/apis/apps/v1alpha1.NexusCredentials", "github.com/m88i/nexus-operator/pkg/apis/apps/v1alpha1.NexusPersistence", "github.com/m88i/nexus-operator/pkg/apis/apps/v1alpha1.NexusResources"},
	}
}

func schema_pkg_apis_apps_v1alpha1_NexusStatus(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "NexusStatus defines the observed state of Nexus",
				Type:        []string{"object"},
				Properties: map[string]spec.Schema{
					"condition": {
						SchemaProps: spec.SchemaProps{
							Description: "Condition is the general condition status for the Nexus deployment",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"host": {
						SchemaProps: spec.SchemaProps{
							Description: "Host is Nexus Web Console URL",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"adminUser": {
						SchemaProps: spec.SchemaProps{
							Description: "AdminUser is the administrator username",
							Type:        []string{"string"},
							Format:      "",
						},
					},
				},
			},
		},
	}
}
